{
    "@graph": [
        {
            "@id": "gnd:129502103",
            "sameAs": "Weidling, Christoph"
        },
        {
            "@id": "gnd:4323071-4",
            "sameAs": "Hash-Algorithmus"
        },
        {
            "@id": "https://www.tib.eu/de/suchen/id/TIBKAT%3A476628725",
            "@type": "bibo:Thesis",
            "P1053": "Online-Ressource (PDF-Datei: 136 S., 1336 KB)",
            "identifier": [
                "(firstid)GBV:476628725",
                "(ppn)476628725"
            ],
            "publisher": "Univ.-Bibliothek",
            "subject": [
                "(classificationName=bk, id=106403265)54.62 - Datenstrukturen",
                "(classificationName=ddc-dbn)004",
                "(classificationName=ddc)004",
                "(classificationName=linseach:mapping)inf"
            ],
            "title": "Platzeffiziente Hashverfahren mit garantierter konstanter Zugriffszeit",
            "abstract": "Wir stellen ein neues Verfahren zur Konstruktion einer minimalen perfekten Hashfunktion (MPHF) und ein neues cachefreundliches dynamisches Wörterbuch vor, beschreiben die neuen Verfahren algorithmisch und analysieren sie hinsichtlich Platzbedarf und Laufzeit. Für die Analyse nehmen wir an, dass die in den Verfahren benutzten Hashfunktionen volle Unabhängigkeit gewährleisten. Schließlich werden wir jeweils experimentelle Resultate angeben und interpretieren. Wir zeigen, dass man eine minimale perfekte Hashfunktion für n Schlüssel mit einem Platzbedarf von 0.93n Wörtern in erwarteter Zeit O(n) realisieren kann. Zur Auswertung der MPHF werden 2 Hashfunktionen berechnet und zwei Speicherzugriffe durchgeführt. Unser dynamisches Wörterbuch benötigt (1+epsilon)n Platz für ein beliebiges epsilon &gt; 0. Bei der Suche müssen 2 Hashfunktionen ausgewertet und 2d Speicherzellen inspiziert werden, die in zwei zusammenhängenden Speicherbereichen liegen, wobei d &gt;= 1+3.26 ln(1/epsilon). Wir können zeigen, dass für d &gt;= 90.1 ln(1/epsilon) die erwartete Einfügezeit für einen neuen Schlüssel konstant ist. Am Ende werden wir zeigen, wie man dynamisches Hashing mit Zeichenketten cachefreundlich realisieren kann.",
            "contributor": "Technische Informationsbibliothek (TIB)",
            "creator": "gnd:129502103",
            "issued": "2004",
            "language": "http://id.loc.gov/vocabulary/iso639-1/de",
            "license": "open access",
            "medium": "rda:termList/RDACarrierType/1018",
            "dcterms:subject": {
                "@id": "gnd:4323071-4"
            }
        }
    ],
    "@id": "urn:x-arq:DefaultGraphNode",
    "@context": {
        "sameAs": "http://www.w3.org/2002/07/owl#sameAs",
        "license": "http://purl.org/dc/terms/license",
        "identifier": "http://purl.org/dc/elements/1.1/identifier",
        "subject": "http://purl.org/dc/elements/1.1/subject",
        "title": "http://purl.org/dc/elements/1.1/title",
        "P1053": "http://iflastandards.info/ns/isbd/elements/P1053",
        "abstract": "http://purl.org/dc/terms/abstract",
        "issued": "http://purl.org/dc/terms/issued",
        "creator": {
            "@id": "http://purl.org/dc/terms/creator",
            "@type": "@id"
        },
        "contributor": "http://purl.org/dc/terms/contributor",
        "publisher": "http://purl.org/dc/elements/1.1/publisher",
        "medium": {
            "@id": "http://purl.org/dc/terms/medium",
            "@type": "@id"
        },
        "language": {
            "@id": "http://purl.org/dc/terms/language",
            "@type": "@id"
        },
        "umbel": "http://umbel.org/umbel#",
        "rdau": "http://www.rdaregistry.info/Elements/u/#",
        "owl": "http://www.w3.org/2002/07/owl#",
        "dcterms": "http://purl.org/dc/terms/",
        "bibo": "http://purl.org/ontology/bibo/",
        "rdam": "http://www.rdaregistry.info/Elements/m/#",
        "gnd": "http://d-nb.info/gnd/",
        "isbd": "http://iflastandards.info/ns/isbd/elements/",
        "rda": "http://rdvocab.info/",
        "doi": "https://doi.org/"
    }
}