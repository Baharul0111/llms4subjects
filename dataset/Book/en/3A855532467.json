{
    "@graph": [
        {
            "@id": "gnd:4026894-9",
            "sameAs": "Informatik"
        },
        {
            "@id": "gnd:4026898-6",
            "sameAs": "Informatikunterricht"
        },
        {
            "@id": "gnd:4070463-4",
            "sameAs": "Didaktik"
        },
        {
            "@id": "https://www.tib.eu/de/suchen/id/TIBKAT%3A855532467",
            "@type": "bibo:Book",
            "P1053": "1 Online-Ressource (xviii, 147 Seiten)",
            "creator": "Guzdial, Mark.",
            "description": "Campusweiter Zugriff (Universität Hannover) - Vervielfältigungen (z.B. Kopien, Downloads) sind nur von einzelnen Kapiteln oder Seiten und nur zum eigenen wissenschaftlichen Gebrauch erlaubt. Keine Weitergabe an Dritte. Kein systematisches Downloaden durch Robots.",
            "identifier": [
                "(firstid)GBV:855532467",
                "(isbn)1627053522",
                "(ppn)855532467",
                "(isbn13)9781627053525"
            ],
            "publisher": "Morgan &amp; Claypool",
            "subject": [
                "(classificationName=ddc)004",
                "(classificationName=linseach:mapping)pae",
                "Student-centered learning",
                "(classificationName=rvk)SR 910",
                "Computer science",
                "(classificationName=loc)QA76.27",
                "(classificationName=linseach:mapping)inf"
            ],
            "title": "Learner-centered design of computing education : research on computing for everyone",
            "abstract": [
                "2. The challenges of learning programming -- 2.1 The rainfall problem: programming is harder than we thought -- 2.2 Multi-institutional, multi-national studies -- 2.3 Measuring computer science knowledge -- 2.4 How learning works -- 2.4.1 Assimilation and accommodation -- 2.4.2 Transfer of knowledge -- 2.5 Why do students learn less computer science than we expect? -- 2.5.1 What makes learning computer science different -- 2.5.2 Developing a notional machine -- 2.6 Increasing the value of learning computing -- 2.6.1 Situated learning -- 2.6.2 Expectancy-value theory -- 2.7 What makes learning programming hard --",
                "4. Media computation and contextualized computing education -- 4.1 Teaching one course for all -- 4.1.1 What&apos;s wrong with one course? -- 4.2 The design and development of media computation -- 4.2.1 Scaffolding in media computation -- 4.2.2 Offering the first media computation courses -- 4.3 Impact of media computation -- 4.3.1 Impact within Georgia Tech -- 4.3.2 Impact outside Georgia Tech -- 4.3.3 Why does media computation work, and where doesn&apos;t it? -- 4.4 A second course in media computation -- 4.5 Design of a computing course for non-computer science majors --",
                "Bibliography -- Author&apos;s biography -- Index",
                "6. Learner-centered computing education for computer science majors -- 6.1 Multiple introductory courses are useful -- 6.2 The \"geek gene\" -- 6.2.1 Teaching to address differences -- 6.2.2 Diverse and effective teaching methods -- 6.3 Creating face-saving paths into computer science -- 6.4 More than one kind of computer science -- 6.4.1 Threads -- 6.4.2 How computer science students make choices -- 6.5 Context helps computer science majors, too -- 6.6 The need for greater exploration in computing education --",
                "Computing education is in enormous demand. Many students (both children and adult) are realizing that they will need programming in the future. This book presents the argument that they are not all going to use programming in the same way and for the same purposes. What do we mean when we talk about teaching everyone to program? When we target a broad audience, should we have the same goals as computer science education for professional software developers? How do we design computing education that works for everyone? This book proposes use of a learner-centered design approach to create computing education for a broad audience. It considers several reasons for teaching computing to everyone and how the different reasons lead to different choices about learning goals and teaching methods. The book reviews the history of the idea that programming isn&apos;t just for the professional software developer. It uses research studies on teaching computing in liberal arts programs, to graphic designers, to high school teachers, in order to explore the idea that computer science for everyone requires us to re-think how we teach and what we teach. The conclusion describes how we might create computing education for everyone",
                "1. What does computing for everyone mean? -- 1.1 Defining terms: computing education, computer science, and programming -- 1.2 Why should everyone learn computing? -- 1.2.1 Jobs -- 1.2.2 Learn about their world -- 1.2.3 Computational thinking -- 1.2.4 Computational literacy -- 1.2.5 Productivity -- 1.2.6 Broadening participation -- 1.3 How do we teach computer science now? -- 1.3.1 Perspectives of computer science teachers -- 1.3.2 Teaching for software development expertise -- 1.3.3 Expertise and authenticity are socially determined -- 1.3.4 The inverse Lake Wobegon effect -- 1.4 How should we teach computing for everyone? -- 1.4.1 Learner-centered design -- 1.4.2 Example: Computational media at Georgia Tech -- 1.5 Overview of the book --",
                "5. Adults as computing learners -- 5.1 Graphic and web designers as end-user programmers -- 5.1.1 Helping graphic designers -- 5.1.2 Starting from the learning challenges -- 5.2 The needs of computing teachers as computing learners -- 5.2.1 Adults learning computer science online -- 5.2.2 What high school computer science teachers need to succeed -- 5.2.3 Developing the identity of a computer science teacher -- 5.2.4 Developing online teacher education -- 5.3 Designing computing education for adults --",
                "7. Steps toward computing for everyone -- 7.1 Revisiting why everyone should learn computing -- 7.2 Teaching computing in elementary school -- 7.2.1 Why not teach computing in elementary school -- 7.2.2 Why teach computing in elementary school -- 7.2.3 Research questions for teaching computing in elementary school -- 7.3 Teaching computing in secondary school -- 7.3.1 Research questions for teaching computing in secondary school -- 7.4 Teaching computing to undergraduates -- 7.4.1 Improve teaching about computing -- 7.4.2 Improve the tools of computing -- 7.4.3 Create more researchers in computing education -- 7.5 Conclusion: learner-centered design of computing education --",
                "3. Computational thinking and using programming to learn -- 3.1 Computers and the world of the future -- 3.2 Computational thinking -- 3.3 Programming as a tool for learning -- 3.3.1 Smalltalk and Boxer -- 3.3.2 Students building software to learn -- 3.4 Programming and problem-solving skills -- 3.5 Learning programming to learn mathematics and science -- 3.6 Learning about computer science when developing computational literacy -- 3.7 Summary: synergy between computing and other domains --"
            ],
            "contributor": "Technische Informationsbibliothek (TIB)",
            "isPartOf": [
                "(collectioncode)ZDB-105-MCIA",
                "(collectioncode)ZDB-105-MCS"
            ],
            "issued": "2016",
            "language": "http://id.loc.gov/vocabulary/iso639-1/en",
            "license": "commercial licence",
            "medium": "rda:termList/RDACarrierType/1018",
            "dcterms:subject": [
                {
                    "@id": "gnd:4026894-9"
                },
                {
                    "@id": "gnd:4070463-4"
                },
                {
                    "@id": "gnd:4026898-6"
                }
            ],
            "volume": "# 33",
            "P30128": "Synthesis lectures on human-centered informatics",
            "P60163": "[San Rafael]"
        }
    ],
    "@id": "urn:x-arq:DefaultGraphNode",
    "@context": {
        "license": "http://purl.org/dc/terms/license",
        "abstract": "http://purl.org/dc/terms/abstract",
        "title": "http://purl.org/dc/elements/1.1/title",
        "subject": "http://purl.org/dc/elements/1.1/subject",
        "P60163": "http://www.rdaregistry.info/Elements/u/#P60163",
        "volume": "http://purl.org/ontology/bibo/volume",
        "isPartOf": "http://purl.org/dc/terms/isPartOf",
        "medium": {
            "@id": "http://purl.org/dc/terms/medium",
            "@type": "@id"
        },
        "issued": "http://purl.org/dc/terms/issued",
        "identifier": "http://purl.org/dc/elements/1.1/identifier",
        "P30128": "http://www.rdaregistry.info/Elements/m/#P30128",
        "publisher": "http://purl.org/dc/elements/1.1/publisher",
        "creator": "http://purl.org/dc/elements/1.1/creator",
        "P1053": "http://iflastandards.info/ns/isbd/elements/P1053",
        "description": "http://purl.org/dc/elements/1.1/description",
        "language": {
            "@id": "http://purl.org/dc/terms/language",
            "@type": "@id"
        },
        "contributor": "http://purl.org/dc/terms/contributor",
        "sameAs": "http://www.w3.org/2002/07/owl#sameAs",
        "umbel": "http://umbel.org/umbel#",
        "rdau": "http://www.rdaregistry.info/Elements/u/#",
        "owl": "http://www.w3.org/2002/07/owl#",
        "dcterms": "http://purl.org/dc/terms/",
        "bibo": "http://purl.org/ontology/bibo/",
        "rdam": "http://www.rdaregistry.info/Elements/m/#",
        "gnd": "http://d-nb.info/gnd/",
        "isbd": "http://iflastandards.info/ns/isbd/elements/",
        "rda": "http://rdvocab.info/",
        "doi": "https://doi.org/"
    }
}